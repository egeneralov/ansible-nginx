{{ ansible_managed | comment }}
# Created from: {{ item | to_json }}
#

{% for location in item.locations %}
{% if location.type == "proxy" %}
upstream upstream_proxy_{{ (item.domain + location.path) | hash('sha1') }} {
{% for server in location.proxy_to %}
  server {{ server }};
{% endfor %}
}
{% endif %}
{% if location.type == "fastcgi" %}
upstream upstream_fastcgi_{{ (item.domain + location.path) | hash('sha1') }} {
  {% if location.ip_hash|default(false) %}ip_hash;{% endif %}

{% for server in location.fastcgi_pass %}
  server {{ server }};
{% endfor %}
}
{% endif %}
{% endfor %}

{% if item.ssl and item.rewrite_ssl %}
server {
  server_name {{ item.domain }};
  listen 80;
  rewrite ^ https://$http_host$request_uri? permanent;
  
  access_log /var/log/nginx/{{ item.domain }}_access.log extend_json buffer=16k flush=10s;
  error_log /var/log/nginx/{{ item.domain }}_error.log;
}
{% endif %}
{% if item.rewrite_www %}
server {
  server_name www.{{ item.domain }};
  listen 80;
  return 301 http://$http_host$request_uri;

  access_log /var/log/nginx/{{ item.domain }}_access.log extend_json buffer=16k flush=10s;
  error_log /var/log/nginx/{{ item.domain }}_error.log;
}
{% endif %}



server {
  server_name {{ item.domain }};
  listen {% if item.ssl | default(False) %}443 ssl{% else %}80{% endif %};


  access_log /var/log/nginx/{{ item.domain }}_access.log extend_json buffer=16k flush=10s;
  error_log /var/log/nginx/{{ item.domain }}_error.log;

  {% if item.ignore_invalid_headers is defined %}
  {% if item.ignore_invalid_headers == true %}
  ignore_invalid_headers off;
  {% endif %}
  {% endif %}

  {% if item.proxy_buffering is defined %}
  {% if item.proxy_buffering == false %}
  proxy_buffering off;
  {% endif %}
  {% endif %}


  {% if item.raw is defined %}
    {{ item.raw }}
  {% endif %}


  {% if item.index is defined %}index {{ item.index }};{% endif %}

  root {{ item.root | default('/var/www/' + item.domain ) }};
  client_max_body_size {{ item.client_max_body_size | default('5m') }};
{% if item.ssl %}
  ssl_certificate {{ item.ssl_certificate | default('/etc/nginx/ssl/' + item.domain + '.crt') }};
  ssl_certificate_key {{ item.ssl_certificate_key | default('/etc/nginx/ssl/' + item.domain + '.key') }};
{% endif %}

{% for location in item.locations %}
  location {{ location.path }} {

{% if location.raw is defined %}{{ location.raw }}{% endif %}


{% if location.root is defined %}
    root {{ location.root }};
{% endif %}

{% if location.index is defined %}
    index {{ location.index }};
{% endif %}

{% if location.rewrite is defined %}
    rewrite {{ location.rewrite }};
{% endif %}

{% if location.try_files is defined %}
    try_files {{ location.try_files }};
{% endif %}

{% if location.type == "proxy" %}
    proxy_pass {{ location.schema }}upstream_proxy_{{ (item.domain + location.path) | hash('sha1') }};

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Referer $http_referer;

    proxy_connect_timeout {{ proxy_connect_timeout | default('60s') }};
    proxy_send_timeout {{ proxy_send_timeout | default('60s') }};
    proxy_read_timeout {{ proxy_read_timeout | default('60s') }};
    send_timeout {{ send_timeout | default('60s') }};
    proxy_redirect {{ proxy_redirect | default('off') }};

{% if location.proxy_set_header is defined %}
    proxy_set_header Host {{ location.proxy_set_header }};
{% endif %}

{% endif %}
{% if location.type == "fastcgi" %}
    fastcgi_pass upstream_fastcgi_{{ (item.domain + location.path) | hash('sha1') }};
{% if location.fastcgi_param is defined %}
    fastcgi_param {{ location.fastcgi_param }};
{% endif %}
{% if location.fastcgi_index is defined %}
    fastcgi_index {{ location.fastcgi_index }}
{% else %}
    fastcgi_index index.php;
{% endif %}
    include fastcgi_params;
{% endif %}
  }

{% endfor %}
  
}
